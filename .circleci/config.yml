version: 2.1

define:
  &images [
    factorio-base,
    gmod-base,
    minecraft-paper-base,
    project-zombiod-base,
    satisfactory-base,
    sdtd-base,
  ]

executors:
  docker-publisher:
    machine: true
    resource_class: joshhsoj1902/ubuntu
    environment:
      IMAGE_NAME: joshhsoj1902/docker-linuxgsm-images
  docker-cimg:
    machine: true
    resource_class: joshhsoj1902/ubuntu

jobs:
  build-docker:
    parameters:
      dir:
        type: string
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: "Build image"
          command: |
            docker build -f images/<< parameters.dir >>/Dockerfile -t $IMAGE_NAME:latest-<< parameters.dir >> images/<< parameters.dir >>
  publish-docker-latest:
    parameters:
      dir:
        type: string
    executor: docker-publisher
    steps:
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}-<< parameters.dir >>"
            docker tag $IMAGE_NAME:latest-<< parameters.dir >> $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest-<< parameters.dir >>
            docker push $IMAGE_NAME:$IMAGE_TAG
  publish-docker-tag:
    parameters:
      dir:
        type: string
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: "Pull image"
          command: |
            docker pull $IMAGE_NAME:latest-<< parameters.dir >> || true
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest-<< parameters.dir >> $IMAGE_NAME:$IMAGE_TAG-<< parameters.dir >>
            docker push $IMAGE_NAME:$IMAGE_TAG-<< parameters.dir >>
  check-sdtd-config:
    executor: docker-cimg
    steps:
      - run: mkdir -p /tmp/serverconfig
      - run:
          name: install Gomplate
          command: |
            curl -o ~/gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v3.11.6/gomplate_linux-amd64-slim
            chmod 755 ~/gomplate
      - checkout
      - run:
          name: Download current LGSM serverconfig
          command: wget -O /tmp/serverconfig/lgsm-serverconfig.xml https://raw.githubusercontent.com/GameServerManagers/Game-Server-Configs/main/sdtd/serverconfig.xml
      - run:
          name: Render default serverconfig
          command: ~/gomplate -f images/sdtd-base/layers/001-base/serverfiles/sdtdserver.xml.gomplate -o /tmp/serverconfig/gomplate-serverconfig.xml
      - store_artifacts:
          path: /tmp/serverconfig
      - run:
          name: Diff two configs
          command: diff -w --color=always --unified=3 /tmp/serverconfig/lgsm-serverconfig.xml /tmp/serverconfig/gomplate-serverconfig.xml

workflows:
  build:
    jobs:
      - build-docker:
          matrix:
            parameters:
              dir: *images
      - publish-docker-latest:
          matrix:
            parameters:
              dir: *images
          requires:
            - build-docker
          filters:
            branches:
              only: main
      - publish-docker-tag:
          matrix:
            parameters:
              dir: *images
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
  checks:
    jobs:
      - check-sdtd-config
